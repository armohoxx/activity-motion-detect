//
//  MainInteractor.swift
//  location_activity
//
//  Created phattarapon on 21/7/2565 BE.
//  Copyright © 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import MapKit
import CoreLocation
import CoreMotion

class MainInteractor: CLLocationManager, CLLocationManagerDelegate {

    weak var presenter: MainPresenterProtocol?
    let locationManager = CLLocationManager()
    let motionActivityManager = CMMotionActivityManager()
}

extension MainInteractor: MainInteractorProtocol {
    
    func addLocationObserver() {
//        NotificationCenter.default.addObserver(self, selector: #selector(onLocationNotificationUpdated(notification:)), name: .LocationHelperDidUpdatedSelectedLocation, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(onLocationNotificationError(notification:)), name: .LocationHelperDidError, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(onActivityMotionNotificationUpdated(notification:)), name: .ActivityMotionHelper, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(onSpeedLocationNotificationUpdated(notification:)), name: .LocationSpeedHelperDidUpdatedSelectedLocation, object: nil)
    }
    
//    @objc func onLocationNotificationUpdated(notification: Notification) {
//        if let location = notification.object as? Location {
//            self.presenter?.notifyLocationFetched(location: location)
//            //self.fetchLocationAuthorizationUpdated()
//        }
//    }
    
    @objc func onLocationNotificationError(notification: Notification) {
        if let err = notification.object as? Error {
            print("Location error = \(err)")
        }
    }
    
    @objc func onActivityMotionNotificationUpdated(notification: Notification) {
        if let motion = notification.object as? CMMotionActivity {
            let dateFormatter = DateFormatter()
            dateFormatter.dateFormat = "yyyy-MM-dd HH:mm"
            let date = dateFormatter.string(from: motion.startDate)
            self.presenter?.notifyDisplayMotionData(motion: motion, date: date)
        }
    }
    
    @objc func onSpeedLocationNotificationUpdated(notification: Notification) {
        if let speed = notification.object as? Double {
            self.presenter?.notifyDisplayGPSSpeed(speed: speed)
        }
    }

    func fetchHistoryActivity() {
        let activity = DBActivityHelper().selectActivityData()
        self.presenter?.notifyFetchHistoryActivity(activity: activity)
    }
    
    func insertHistoryActivity(activity: ActivityForm) {
        DBActivityHelper.insertActivity(historyActivity: activity)
    }
}
